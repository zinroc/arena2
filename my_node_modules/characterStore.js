var Promise = Promise || require("bluebird");

var utils = require("../utils.js");




var popCap = 1000;
/**
 * Interacts with character state
 * Requires knex when loaded
 */
module.exports = function (knex) {
    this.knex = knex;



    return {
        /**
        * Get characterInfo
        * currently not called
        */
        get: function (){
            return knex("characters")
            .select("*")
            .then(function (rows){
                return rows;
            })
        },
        /**
        * Create a character
        * Called from server.
        */
        create: function (name){
            return knex("characters")
            .insert({name: name})
            .returning("id")
            .then(function (rows){
                return rows[0];
            })
        },
        /*
        * Called from server.
        */
        createPop: function (){

            return this.get()
            .then(function (characterArr){
                var charactersForCreation = popCap - characterArr.length;
                var promises = [];
                for (var i=0; i<charactersForCreation; i++){
                    var name = utils.newName();
                    var characterStore = require("./characterStore.js")(knex);
                    promises[i] = characterStore.create(name);
                }
                return Promise.all(promises);
            }).then(function (ids){
                return ids;
            });
        },
        /*
        * Called from server.
        */
        moveVisitors: function (playersArr){
            var promises = [];
            for (var i=0; i<playersArr.length; i++){
                var player = playersArr[i];
                var characterStore = require("./characterStore.js")(knex);
                promises[i] = characterStore.moveVisitorsToPlayer(player.email);
            }
            return Promise.all(promises)
        },
        /*
        * Called from server
        *knex.select('*').from('users').limit(10).offset(30)
        */
        moveVisitorsToPlayer: function(email){
            var numVisitors = Math.floor(Math.random()*4 + 1);
            return knex.select('*')
            .from('characters')
            .whereNull("location")
            .orderBy(knex.raw('RANDOM()'))
            .limit(numVisitors)
            .then(function (visitors){
                var promises = [];
                for (var i=0; i<visitors.length; i++){
                    var visitor = visitors[i];
                    promises[i] = knex('characters')
                    .update({location: email})
                    .where({id: visitor.id})
                }
                return Promise.all(promises);
            })
        },
        /*
        *   Callend from client
        */
        getVisitors: function (email){
            return knex('characters')
            .where({location: email})
            .then(function (visitorArr){
                return visitorArr;
            })
        },
        /*
        * Called from server
        */
        clearVisitors: function(){
            return knex("characters")
            .whereNotNull('location')
            .update({location: null})
            .returning("id")
            .then(function (rows){
                return rows;
            });
        }
    };
};