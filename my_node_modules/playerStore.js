var Promise = Promise || require("bluebird");


var startingGold = 1000;
/**
 * Interacts with player state
 * Requires knex when loaded
 */
module.exports = function (knex) {
    this.knex = knex;


    return {
        /**
        * Register a new user if no entry exists
        * @return ARRAY [id]
        */
        create: function (email, name){
            return knex("players")
            .where("email", email)
            .select("*")
            .then(function (rows){
                //if this entry does not exist, add it
                if (rows.length === 0) {
                    return knex('players')
                    .insert({
                        email: email,
                        name: name,
                        character_cap: 2, 
                    }).returning("id");
                } else { //if it does exist, do no add it
                    var result = []
                    result[0] = rows[0].id;
                    return result;
                }
            });
        },
        /**
        * Get playerInfo base on ID
        */
        get: function (id){
            return knex("players")
            .where("id", id)
            .select("*")
            .then(function (rows){
                return rows[0];
            })
        },
        getAll: function (){
            return knex("players")
            .select("*")
            .then(function (rows){
                return rows;
            })
        },
        getByEmail: function (email){
            return knex("players")
            .where("email", email)
            .select("*")
            .then(function (rows){
                return rows[0];
            })
        },
        getScrollPacks: function (email){
            return knex("scroll_packs")
            .where("owner", email)
            .then(function (rows){
                return rows;
            })
        },
        buyScrollPack: function (email){
            return knex("scroll_packs")
            .insert({type: 'general', level: 1, owner: email, opened: false})
            .returning("id")
            .then(function (rows){
                return rows[0].id;
            })
        }
    };
};